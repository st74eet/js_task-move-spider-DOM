{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,qBAC9B,EAAS,EAAK,aAAa,CAAC,uBAE5B,EAAa,EAAK,qBAAqB,GACvC,EAAkB,SAAS,iBAAiB,GAAM,eAAe,EACjE,EAAmB,SAAS,iBAAiB,GAAM,cAAc,EACjE,EAAa,SAAS,iBAAiB,GAAQ,MAAM,EAE3D,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,GAAK,EAAK,QAAQ,CAAC,EAAE,MAAM,GAI3B,IAAM,EAAS,EAAE,OAAO,CAAG,EAAW,GAAG,CAAG,EAGtC,EAAU,KAAK,GAAG,CACtB,EACA,KAAK,GAAG,CACN,AALW,EAAE,OAAO,CAAG,EAAW,IAAI,CAAG,EAKhC,EAAa,EACtB,EAAW,KAAK,CAAG,EAAa,AAAkB,EAAlB,IAI9B,EAAU,KAAK,GAAG,CACtB,EACA,KAAK,GAAG,CACN,EAAS,EAAa,EACtB,EAAW,MAAM,CAAG,EAAa,AAAmB,EAAnB,GAIrC,CAAA,EAAO,KAAK,CAAC,GAAG,CAAG,GAAW,MAAA,CAAR,EAAQ,MAC9B,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,MACjC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar wall = document.querySelector('div[class=\"wall\"]');\nvar spider = wall.querySelector('img[class=\"spider\"]');\nvar wallCoords = wall.getBoundingClientRect();\nvar wallBorderWidth = parseInt(getComputedStyle(wall).borderLeftWidth);\nvar wallBorderHeight = parseInt(getComputedStyle(wall).borderTopWidth);\nvar spiderSize = parseInt(getComputedStyle(spider).height);\ndocument.addEventListener(\"click\", function(e) {\n    if (!wall.contains(e.target)) return;\n    var clickY = e.clientY - wallCoords.top - wallBorderHeight;\n    var clickX = e.clientX - wallCoords.left - wallBorderWidth;\n    var spiderX = Math.max(0, Math.min(clickX - spiderSize / 2, wallCoords.width - spiderSize - wallBorderWidth * 2));\n    var spiderY = Math.max(0, Math.min(clickY - spiderSize / 2, wallCoords.height - spiderSize - wallBorderHeight * 2));\n    spider.style.top = \"\".concat(spiderY, \"px\");\n    spider.style.left = \"\".concat(spiderX, \"px\");\n});\n\n//# sourceMappingURL=index.3aa0925f.js.map\n","'use strict';\n\nconst wall = document.querySelector('div[class=\"wall\"]');\nconst spider = wall.querySelector('img[class=\"spider\"]');\n\nconst wallCoords = wall.getBoundingClientRect();\nconst wallBorderWidth = parseInt(getComputedStyle(wall).borderLeftWidth);\nconst wallBorderHeight = parseInt(getComputedStyle(wall).borderTopWidth);\nconst spiderSize = parseInt(getComputedStyle(spider).height);\n\ndocument.addEventListener('click', (e) => {\n  if (!wall.contains(e.target)) {\n    return;\n  }\n\n  const clickY = e.clientY - wallCoords.top - wallBorderHeight;\n  const clickX = e.clientX - wallCoords.left - wallBorderWidth;\n\n  const spiderX = Math.max(\n    0,\n    Math.min(\n      clickX - spiderSize / 2,\n      wallCoords.width - spiderSize - wallBorderWidth * 2,\n    ),\n  );\n\n  const spiderY = Math.max(\n    0,\n    Math.min(\n      clickY - spiderSize / 2,\n      wallCoords.height - spiderSize - wallBorderHeight * 2,\n    ),\n  );\n\n  spider.style.top = `${spiderY}px`;\n  spider.style.left = `${spiderX}px`;\n});\n"],"names":["wall","document","querySelector","spider","wallCoords","getBoundingClientRect","wallBorderWidth","parseInt","getComputedStyle","borderLeftWidth","wallBorderHeight","borderTopWidth","spiderSize","height","addEventListener","e","contains","target","clickY","clientY","top","spiderX","Math","max","min","clickX","clientX","left","width","spiderY","style","concat"],"version":3,"file":"index.3aa0925f.js.map"}